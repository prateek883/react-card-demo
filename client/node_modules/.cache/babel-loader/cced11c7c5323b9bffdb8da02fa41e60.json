{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prave\\\\react-projects\\\\blog-ostello-deisgn\\\\UI-blog-Design\\\\src\\\\Components\\\\Slider.js\";\nimport React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport PostCard from \"./PostCard\";\nimport Button from \"@material-ui/core/Button\";\nimport { createMuiTheme, withStyles, makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport axios from \"axios\";\nimport { violet } from '@material-ui/core/colors';\nconst BootstrapButton = withStyles({\n  root: {\n    boxShadow: 'none',\n    textTransform: 'none',\n    fontSize: 16,\n    padding: '6px 12px',\n    border: '1px solid',\n    lineHeight: 1.5,\n    backgroundColor: '#0063cc',\n    borderColor: '#0063cc',\n    fontFamily: ['-apple-system', 'BlinkMacSystemFont', '\"Segoe UI\"', 'Roboto', '\"Helvetica Neue\"', 'Arial', 'sans-serif', '\"Apple Color Emoji\"', '\"Segoe UI Emoji\"', '\"Segoe UI Symbol\"'].join(','),\n    '&:hover': {\n      backgroundColor: '#0069d9',\n      borderColor: '#0062cc',\n      boxShadow: 'none'\n    },\n    '&:active': {\n      boxShadow: 'none',\n      backgroundColor: '#0062cc',\n      borderColor: '#005cbf'\n    },\n    '&:focus': {\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.5)'\n    }\n  }\n})(Button); // wrapper for items\n\nclass Slider extends React.Component {\n  constructor(props) {\n    super(props);\n    this.mediumURL = \"https://api.rss2json.com/v1/api.json?rss_url=https://medium.com/feed/@Sabesan96\";\n    this.state = {\n      itemRows: [],\n      avatar: \"\",\n      profileLink: \"\"\n    };\n  }\n\n  async componentDidMount() {\n    await axios.get(this.mediumURL).then(async res => await res.data).then(data => {\n      // create two-dimensional array with 3 elements per inner array\n      const avatar = data.feed.image;\n      const profileLink = data.feed.link;\n      const res = data.items; //This is an array with the content. No feed, no info about author etc..\n\n      const posts = res.filter(item => item.categories.length > 0);\n      this.setState({\n        avatar: avatar,\n        profileLink: profileLink\n      });\n      const itemRows = [];\n      posts.forEach((item, i) => {\n        item[\"avatar\"] = this.state.avatar; // push avatar inside the json\n\n        item[\"profilelink\"] = this.state.profileLink; // push profile link inside the JSON\n\n        const row = Math.floor(i / 3);\n        if (!itemRows[row]) itemRows[row] = [];\n        itemRows[row].push(item);\n      });\n      this.setState({\n        itemRows: itemRows\n      });\n    });\n  }\n\n  render() {\n    const {\n      itemRows\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ColorButton, {\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.margin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }\n    }, \"Custom CSS\"), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }\n    }, itemRows.map((row, id) => row.map((item, key) => /*#__PURE__*/React.createElement(PostCard, Object.assign({}, item, {\n      key: key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 34\n      }\n    }))))));\n  }\n\n}\n\nexport default Slider;","map":{"version":3,"sources":["C:/Users/prave/react-projects/blog-ostello-deisgn/UI-blog-Design/src/Components/Slider.js"],"names":["React","Grid","PostCard","Button","createMuiTheme","withStyles","makeStyles","ThemeProvider","axios","violet","BootstrapButton","root","boxShadow","textTransform","fontSize","padding","border","lineHeight","backgroundColor","borderColor","fontFamily","join","Slider","Component","constructor","props","mediumURL","state","itemRows","avatar","profileLink","componentDidMount","get","then","res","data","feed","image","link","items","posts","filter","item","categories","length","setState","forEach","i","row","Math","floor","push","render","classes","margin","map","id","key"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport PostCard from \"./PostCard\";\nimport Button from \"@material-ui/core/Button\";\nimport { createMuiTheme, withStyles, makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport axios from \"axios\";\nimport {  violet } from '@material-ui/core/colors';\n\n\nconst BootstrapButton = withStyles({\n  root: {\n    boxShadow: 'none',\n    textTransform: 'none',\n    fontSize: 16,\n    padding: '6px 12px',\n    border: '1px solid',\n    lineHeight: 1.5,\n    backgroundColor: '#0063cc',\n    borderColor: '#0063cc',\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n    '&:hover': {\n      backgroundColor: '#0069d9',\n      borderColor: '#0062cc',\n      boxShadow: 'none',\n    },\n    '&:active': {\n      boxShadow: 'none',\n      backgroundColor: '#0062cc',\n      borderColor: '#005cbf',\n    },\n    '&:focus': {\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.5)',\n    },\n  },\n})(Button);\n\n// wrapper for items\nclass Slider extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { itemRows: [], avatar: \"\", profileLink: \"\" };\n  }\n  mediumURL =\n    \"https://api.rss2json.com/v1/api.json?rss_url=https://medium.com/feed/@Sabesan96\";\n\n  async componentDidMount() {\n    await axios\n      .get(this.mediumURL)\n      .then(async (res) => await res.data)\n      .then((data) => {\n        // create two-dimensional array with 3 elements per inner array\n        const avatar = data.feed.image;\n        const profileLink = data.feed.link;\n        const res = data.items; //This is an array with the content. No feed, no info about author etc..\n        const posts = res.filter((item) => item.categories.length > 0);\n\n        this.setState({ avatar: avatar, profileLink: profileLink });\n        const itemRows = [];\n        posts.forEach((item, i) => {\n          item[\"avatar\"] = this.state.avatar; // push avatar inside the json\n          item[\"profilelink\"] = this.state.profileLink; // push profile link inside the JSON\n          const row = Math.floor(i / 3);\n          if (!itemRows[row]) itemRows[row] = [];\n          itemRows[row].push(item);\n        });\n\n        this.setState({ itemRows: itemRows });\n      });\n  }\n  render() {\n    const { itemRows } = this.state;\n\n    \n    return (\n      <div>\n      <ColorButton variant=\"contained\" color=\"primary\" className={classes.margin}>\n        Custom CSS\n      </ColorButton>\n      <Grid container spacing={1}>\n        {itemRows.map((row, id) =>\n          row.map((item, key) => <PostCard {...item} key={key} />)\n        )}\n      </Grid>\n      </div>\n\n    );\n  }\n}\nexport default Slider;\n"]},"metadata":{},"sourceType":"module"}