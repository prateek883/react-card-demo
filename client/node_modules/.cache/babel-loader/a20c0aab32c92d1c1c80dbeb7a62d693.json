{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prave\\\\react-projects\\\\blog-ostello-deisgn\\\\UI-blog-Design\\\\src\\\\Components\\\\Slider.js\";\nimport React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport PostCard from \"./PostCard\";\nimport Button from \"@material-ui/core/Button\";\nimport axios from \"axios\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport { SliderData } from \"./SliderData\";\nimport { FaArrowAltCircleRight, FaArrowAltCircleLeft } from \"react-icons/fa\"; // wrapper for items\n\nclass Slider extends React.Component {\n  constructor(props) {\n    super(props);\n    this.mediumURL = \"https://api.rss2json.com/v1/api.json?rss_url=https://medium.com/feed/@Sabesan96\";\n    this.state = {\n      itemRows: [],\n      avatar: \"\",\n      profileLink: \"\"\n    };\n  }\n\n  async componentDidMount() {\n    await axios.get(this.mediumURL).then(async res => await res.data).then(data => {\n      // create two-dimensional array with 3 elements per inner array\n      const avatar = data.feed.image;\n      const profileLink = data.feed.link;\n      const res = data.items; //This is an array with the content. No feed, no info about author etc..\n\n      const posts = res.filter(item => item.categories.length > 0);\n      this.setState({\n        avatar: avatar,\n        profileLink: profileLink\n      });\n      const itemRows = [];\n      posts.forEach((item, i) => {\n        item[\"avatar\"] = this.state.avatar; // push avatar inside the json\n\n        item[\"profilelink\"] = this.state.profileLink; // push profile link inside the JSON\n\n        const row = Math.floor(i / 3);\n        if (!itemRows[row]) itemRows[row] = [];\n        itemRows[row].push(item);\n      });\n      this.setState({\n        itemRows: itemRows\n      });\n    });\n  }\n\n  render() {\n    const {\n      itemRows\n    } = this.state;\n\n    const ImageSlider = ({\n      slides\n    }) => {\n      const [current, setCurrent] = useState(0);\n      const length = slides.length;\n\n      const nextSlide = () => {\n        setCurrent(current === length - 1 ? 0 : current + 1);\n      };\n\n      const prevSlide = () => {\n        setCurrent(current === 0 ? length - 1 : current - 1);\n      };\n\n      if (!Array.isArray(slides) || slides.length <= 0) {\n        return null;\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"section\", {\n        className: \"slider\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(FaArrowAltCircleLeft, {\n        className: \"left-arrow\",\n        onClick: prevSlide,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(FaArrowAltCircleRight, {\n        className: \"right-arrow\",\n        onClick: nextSlide,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }\n      }), SliderData.map((slide, index) => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: index === current ? \"slide active\" : \"slide\",\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }\n        }, index === current && /*#__PURE__*/React.createElement(\"img\", {\n          src: slide.image,\n          alt: \"travel image\",\n          className: \"image\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 19\n          }\n        }));\n      })), /*#__PURE__*/React.createElement(Button, {\n        size: \"large\",\n        variant: \"contained\",\n        startIcon: /*#__PURE__*/React.createElement(CreateIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 22\n          }\n        }),\n        color: \"primary\",\n        style: {\n          fontFamily: \"Poppins, sans-serif\",\n          width: \"362px\",\n          marginLeft: \"523px\",\n          borderRadius: \"18px\",\n          marginTop: \"12px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }\n      }, \"Write a Blog\"), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }\n      }, itemRows.map((row, id) => row.map((item, key) => /*#__PURE__*/React.createElement(PostCard, Object.assign({}, item, {\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 36\n        }\n      }))))));\n    };\n  }\n\n}\n\nexport default Slider;","map":{"version":3,"sources":["C:/Users/prave/react-projects/blog-ostello-deisgn/UI-blog-Design/src/Components/Slider.js"],"names":["React","Grid","PostCard","Button","axios","CreateIcon","SliderData","FaArrowAltCircleRight","FaArrowAltCircleLeft","Slider","Component","constructor","props","mediumURL","state","itemRows","avatar","profileLink","componentDidMount","get","then","res","data","feed","image","link","items","posts","filter","item","categories","length","setState","forEach","i","row","Math","floor","push","render","ImageSlider","slides","current","setCurrent","useState","nextSlide","prevSlide","Array","isArray","map","slide","index","fontFamily","width","marginLeft","borderRadius","marginTop","id","key"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport PostCard from \"./PostCard\";\nimport Button from \"@material-ui/core/Button\";\nimport axios from \"axios\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport { SliderData } from \"./SliderData\";\nimport { FaArrowAltCircleRight, FaArrowAltCircleLeft } from \"react-icons/fa\";\n\n// wrapper for items\nclass Slider extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { itemRows: [], avatar: \"\", profileLink: \"\" };\n  }\n  mediumURL =\n    \"https://api.rss2json.com/v1/api.json?rss_url=https://medium.com/feed/@Sabesan96\";\n\n  async componentDidMount() {\n    await axios\n      .get(this.mediumURL)\n      .then(async (res) => await res.data)\n      .then((data) => {\n        // create two-dimensional array with 3 elements per inner array\n        const avatar = data.feed.image;\n        const profileLink = data.feed.link;\n        const res = data.items; //This is an array with the content. No feed, no info about author etc..\n        const posts = res.filter((item) => item.categories.length > 0);\n\n        this.setState({ avatar: avatar, profileLink: profileLink });\n        const itemRows = [];\n        posts.forEach((item, i) => {\n          item[\"avatar\"] = this.state.avatar; // push avatar inside the json\n          item[\"profilelink\"] = this.state.profileLink; // push profile link inside the JSON\n          const row = Math.floor(i / 3);\n          if (!itemRows[row]) itemRows[row] = [];\n          itemRows[row].push(item);\n        });\n\n        this.setState({ itemRows: itemRows });\n      });\n  }\n\n  render() {\n    const { itemRows } = this.state;\n    const ImageSlider = ({ slides }) => {\n      const [current, setCurrent] = useState(0);\n      const length = slides.length;\n    \n      const nextSlide = () => {\n        setCurrent(current === length - 1 ? 0 : current + 1);\n      };\n    \n      const prevSlide = () => {\n        setCurrent(current === 0 ? length - 1 : current - 1);\n      };\n    \n      if (!Array.isArray(slides) || slides.length <= 0) {\n        return null;\n      }\n\n    return (\n      <div>\n        <section className=\"slider\">\n          <FaArrowAltCircleLeft className=\"left-arrow\" onClick={prevSlide} />\n          <FaArrowAltCircleRight className=\"right-arrow\" onClick={nextSlide} />\n          {SliderData.map((slide, index) => {\n            return (\n              <div\n                className={index === current ? \"slide active\" : \"slide\"}\n                key={index}\n              >\n                {index === current && (\n                  <img src={slide.image} alt=\"travel image\" className=\"image\" />\n                )}\n              </div>\n            );\n          })}\n        </section>\n        <Button\n          size=\"large\"\n          variant=\"contained\"\n          startIcon={<CreateIcon />}\n          color=\"primary\"\n          style={{\n            fontFamily: \"Poppins, sans-serif\",\n            width: \"362px\",\n            marginLeft: \"523px\",\n            borderRadius: \"18px\",\n            marginTop: \"12px\",\n          }}\n        >\n          Write a Blog\n        </Button>\n        <Grid container spacing={1}>\n          {itemRows.map((row, id) =>\n            row.map((item, key) => <PostCard {...item} key={key} />)\n          )}\n        </Grid>\n      </div>\n    );\n          }\n  }\n}\nexport default Slider;\n"]},"metadata":{},"sourceType":"module"}