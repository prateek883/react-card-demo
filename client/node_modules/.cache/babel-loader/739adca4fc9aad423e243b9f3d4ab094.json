{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prave\\\\react-projects\\\\blog-ostello-deisgn\\\\UI-blog-Design\\\\src\\\\Components\\\\Slider.js\";\nimport React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport PostCard from \"./PostCard\";\nimport axios from \"axios\";\nimport ZoomGallery from 'react-zoom-carousel'; // wrapper for items\n\nclass Slider extends React.Component {\n  constructor(props) {\n    super(props);\n    this.mediumURL = \"https://api.rss2json.com/v1/api.json?rss_url=https://medium.com/feed/@Sabesan96\";\n    this.state = {\n      open: true\n    };\n    this.state = {\n      itemRows: [],\n      avatar: \"\",\n      profileLink: \"\"\n    };\n  }\n\n  async componentDidMount() {\n    await axios.get(this.mediumURL).then(async res => await res.data).then(data => {\n      // create two-dimensional array with 3 elements per inner array\n      const avatar = data.feed.image;\n      const profileLink = data.feed.link;\n      const res = data.items; //This is an array with the content. No feed, no info about author etc..\n\n      const posts = res.filter(item => item.categories.length > 0);\n      this.setState({\n        avatar: avatar,\n        profileLink: profileLink\n      });\n      const itemRows = [];\n      posts.forEach((item, i) => {\n        item[\"avatar\"] = this.state.avatar; // push avatar inside the json\n\n        item[\"profilelink\"] = this.state.profileLink; // push profile link inside the JSON\n\n        const row = Math.floor(i / 3);\n        if (!itemRows[row]) itemRows[row] = [];\n        itemRows[row].push(item);\n      });\n      this.setState({\n        itemRows: itemRows\n      });\n    });\n  }\n\n  render() {\n    const {\n      itemRows\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ZoomGallery, {\n      open: this.state.open // Conditionally show/hide the carousel\n      ,\n      handleClose: () => this.setState({\n        open: false\n      }) // Called when close button is clicked\n      ,\n      images: zoomGallery // Array of image urls\n      ,\n      initialIndex: 0 // Index to start the slider from\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, itemRows.map((row, id) => row.map((item, key) => /*#__PURE__*/React.createElement(PostCard, Object.assign({}, item, {\n      key: key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 36\n      }\n    }))))));\n  }\n\n}\n\nexport default Slider;","map":{"version":3,"sources":["C:/Users/prave/react-projects/blog-ostello-deisgn/UI-blog-Design/src/Components/Slider.js"],"names":["React","Grid","PostCard","axios","ZoomGallery","Slider","Component","constructor","props","mediumURL","state","open","itemRows","avatar","profileLink","componentDidMount","get","then","res","data","feed","image","link","items","posts","filter","item","categories","length","setState","forEach","i","row","Math","floor","push","render","zoomGallery","map","id","key"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport PostCard from \"./PostCard\";\nimport axios from \"axios\";\nimport ZoomGallery from 'react-zoom-carousel'\n\n\n// wrapper for items\nclass Slider extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { itemRows: [], avatar: \"\", profileLink: \"\" };\n  }\n  mediumURL =\n    \"https://api.rss2json.com/v1/api.json?rss_url=https://medium.com/feed/@Sabesan96\";\n\n  async componentDidMount() {\n    await axios\n      .get(this.mediumURL)\n      .then(async (res) => await res.data)\n      .then((data) => {\n        // create two-dimensional array with 3 elements per inner array\n        const avatar = data.feed.image;\n        const profileLink = data.feed.link;\n        const res = data.items; //This is an array with the content. No feed, no info about author etc..\n        const posts = res.filter((item) => item.categories.length > 0);\n\n        this.setState({ avatar: avatar, profileLink: profileLink });\n        const itemRows = [];\n        posts.forEach((item, i) => {\n          item[\"avatar\"] = this.state.avatar; // push avatar inside the json\n          item[\"profilelink\"] = this.state.profileLink; // push profile link inside the JSON\n          const row = Math.floor(i / 3);\n          if (!itemRows[row]) itemRows[row] = [];\n          itemRows[row].push(item);\n        });\n\n        this.setState({ itemRows: itemRows });\n      });\n  }\n\n  state = {\n    open : true,\n  }\n\n  render() {\n    const { itemRows } = this.state;\n    return (\n      <div>\n        <ZoomGallery\n        open={this.state.open} // Conditionally show/hide the carousel\n        handleClose={() => this.setState({ open: false })} // Called when close button is clicked\n        images={zoomGallery} // Array of image urls\n        initialIndex={0} // Index to start the slider from\n        />\n        <Grid container spacing={1}>\n          {itemRows.map((row, id) =>\n            row.map((item, key) => <PostCard {...item} key={key} />)\n          )}\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default Slider;\n"]},"metadata":{},"sourceType":"module"}